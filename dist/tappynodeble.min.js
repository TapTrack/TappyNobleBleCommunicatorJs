!function(e,n){"function"==typeof define&&define.amd?define([],n):module.exports=n()}(this,function(){return NobleBleCommunicator=function(e){var n=this;if("undefined"==typeof e||null===e||"object"!=typeof e.peripheral)throw new Error("Must specify a noble peripheral");this.peripheral=e.peripheral,"undefined"!=typeof e&&null!==e&&"number"==typeof e.packetSize?this.packetSize=e.packetSize:this.packetSize=20,this.isConnecting=!1,this.hasConnected=!1,this.isSending=!1,this.rxCharacteristic=null,this.txCharacteristic=null,this.disconnectImmediately=!1,this.disconnectCb=function(){},this.sendBufferArray=new Uint8Array,this.dataReceivedCallback=function(e){},this.errorCallback=function(e){},this.readCallback=function(e){n.dataReceivedCallback(new Uint8Array(e))},this.bleDisconnectCallback=function(){n.errorCallback({error:"Tappy disconnected"}),n.disconnect()}},NobleBleCommunicator.SERIAL_SERVICE_UUID="175f8f23a57049bd9627815a6a27de2a",NobleBleCommunicator.TX_CHAR_UUID="cacc07ffffff4c488faea9ef71b75e26",NobleBleCommunicator.RX_CHAR_UUID="1cce1ea8bd344813a00ac76e028fadcb",NobleBleCommunicator.isAdvertisementForTappy=function(e){return"undefined"!=typeof e.localName&&null!==e.localName&&e.localName.indexOf("TAPPY")!==-1},NobleBleCommunicator.prototype={connect:function(e){var n=this;if(!n.isConnecting&&!n.isConnected()){n.isConnecting=!0;var i=function(i){n.isConnecting=!1,e(i)};peripheral=n.peripheral,peripheral.connect(function(t){"undefined"!=typeof t&&null!==t?i({message:"Failed to connect",error:t}):peripheral.discoverSomeServicesAndCharacteristics([NobleBleCommunicator.SERIAL_SERVICE_UUID],[NobleBleCommunicator.RX_CHAR_UUID,NobleBleCommunicator.TX_CHAR_UUID],function(t,r,c){if(null!==t)peripheral.disconnect(),i({message:"Failed to discover characteristics",error:t});else if(c.length>=2){var a=null,o=null;if(c.forEach(function(e){e.uuid===NobleBleCommunicator.RX_CHAR_UUID?a=e:e.uuid===NobleBleCommunicator.TX_CHAR_UUID&&(o=e)}),null===a||null===o)return void i({message:"Missing required characteristic"});n.rxCharacteristic=a,n.txCharacteristic=o,o.on("data",function(e,i){n.readCallback(e)}),o.subscribe(function(t){"undefined"!=typeof t&&null!==t?i({message:"Failed to enable notification",error:t}):(n.hasConnected=!0,n.isConnecting=!1,n.peripheral.on("disconnect",n.bleDisconnectCallback),e(),n.disconnectImmediately&&disconnectUnsafe())})}else peripheral.disconnect(),i({message:"Failed to discover characteristics"})})})}},flush:function(e){},isConnected:function(){var e=this;return e.hasConnected},disconnectUnsafe:function(){var e=this;if(e.isConnecting)throw"Connection still in the process of being established";e.isConnected()&&e.peripheral.disconnect(function(n){"function"==typeof e.disconnectCb&&("undefined"!=typeof n&&null!==n?e.disconnectCb({error:n}):e.disconnectCb()),e.disconnectImmediately=!1,e.isSending=!1,e.hasConnected=!1})},disconnect:function(e){var n=this;n.disconnectImmediately=!0,n.peripheral.removeListener("disconnect",n.bleDisconnectCallback),"function"==typeof e&&(n.disconnectCb=e),!n.isConnecting&&n.isConnected()&&n.disconnectUnsafe()},sendCb:function(e){var n=this;if("undefined"!=typeof e&&null!==e)n.sendBufferArray=new Uint8Array,n.isSending=!1,n.errorCallback({error:e});else if(n.isSendBufferEmpty())n.isSending=!1;else{var i=n.stripNextChunkFromSendBuffer();n.rxCharacteristic.write(new Buffer(i),!1,n.sendCb.bind(n))}},stripNextChunkFromSendBuffer:function(){var e=this;if(e.sendBufferArray.length>e.packetSize){var n=e.sendBufferArray.slice(0,e.packetSize),i=e.sendBufferArray.slice(e.packetSize);return e.sendBufferArray=i,n}var t=e.sendBufferArray;return e.sendBufferArray=new Uint8Array,t},isSendBufferEmpty:function(){var e=this;return 0===e.sendBufferArray.length},initiateSendIfNecessary:function(){var e=this;if(!e.isSending&&!e.isSendBufferEmpty()){e.isSending=!0;var n=e.stripNextChunkFromSendBuffer();e.rxCharacteristic.write(new Buffer(n),!1,e.sendCb.bind(e))}},send:function(e){var n=this,i=new Uint8Array(e),t=new Uint8Array(i.length+n.sendBufferArray.length);t.set(n.sendBufferArray),t.set(i,n.sendBufferArray.length),n.sendBufferArray=t,n.initiateSendIfNecessary()},setDataCallback:function(e){var n=this;n.dataReceivedCallback=e},setErrorCallback:function(e){var n=this;n.errorCallback=e}},NobleBleCommunicator});